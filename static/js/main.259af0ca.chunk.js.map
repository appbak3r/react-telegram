{"version":3,"sources":["store/sagas/telegramSaga.ts","store/connect.ts","utils/actionType.ts","store/actions/telegramActions.ts","store/reducers/appReducer.ts","store/actions/authActions.ts","components/common/button/Button.tsx","components/auth/logout-button/LogoutButton.tsx","components/pages/messenger/Messenger.tsx","services/GeoApiService.ts","assets/icons/logo.svg","components/common/icons/LogoIcon.tsx","utils/makeIcon.tsx","components/forms/label/Label.tsx","components/forms/select/Select.tsx","components/forms/masked-input/MaskedInput.tsx","components/auth/phone-form/PhoneForm.tsx","constants/CountryPhone.ts","components/forms/input/Input.tsx","components/auth/code-form/CodeForm.tsx","components/auth/password-form/PasswordForm.tsx","components/auth/login-form/LoginForm.tsx","components/pages/login/Login.tsx","components/pages/app-loading/AppLoading.tsx","components/pages/PrivateRoute.tsx","components/pages/AppRoute.tsx","App.tsx","components/common/connected-intl-provider/ConnectedIntlProvider.ts","config/environmentDefault.ts","config/environmentProduction.ts","config/environment.ts","store/sagas/rootSaga.ts","store/reducers/rootReducer.ts","index.tsx","store/configureStore.ts","config/appHistory.ts","utils/enableTabMode.ts","services/telegram.worker.ts"],"names":["worker","connect","originalConnect","types","actionType","action","toUpperCase","includes","Error","concat","push","SUCCESS","FAILURE","FETCHING","TelegramMessageReceivedActionType","TelegramMessageSendActionType","sendMessage","message","dispatch","type","payload","AUTHORIZATION_STATES","PHONE_NUMBER","CODE","PASSWORD","AUTHORIZED","LOGGING_OUT","LOADING","initialState","ready","connecting","authState","appReducer","state","arguments","length","undefined","data","Object","objectSpread","authorization_state","subscribeToTelegramWorker","dispatchMessage","telegramSaga","TelegramWorker","require","channel","regenerator_default","a","wrap","_context","prev","next","eventChannel","emit","onmessage","event","terminate","sent","takeEvery","stop","_marked","this","_context2","put","abrupt","_marked2","postMessage","asyncSendMessage","Promise","resolve","reject","addEventListener","onMessageReceived","removeEventListener","loadInitialData","@type","name","value","_context3","all","call","_marked3","LogoutActionTypes","logout","then","console","log","Button","_PureComponent","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","_this$props","props","className","restProps","objectWithoutProperties","rootClassNames","classNames","defineProperty","rt-button","react_default","createElement","assign","children","PureComponent","LogoutButton","bindActionCreators","Button_Button","onClick","Messenger","GeoApiService","fetch","response","json","ip","country_code","symbol","browser_symbol_default","id","use","viewBox","content","logo","browser_sprite_build_default","add","LogoIcon","_ref","iconId","focusable","xlinkHref","makeIcon","TelegramLogo","Label","title","rt-label","Select","_getPrototypeOf2","_this","_len","args","Array","_key","getSelectedOption","options","find","option","toString","onChange","newValue","_this2","placeholder","disabled","error","isSearchable","react_final_form_es","input","meta","hasError","touched","submitError","dirtySinceLastSubmit","selectedOption","rt-select","rt-select--has-error","react_select_esm","classNamePrefix","isDisabled","components","DropdownIndicator","isClearable","defaultProps","validateMask","indexOf","MaskedInput","_React$PureComponent","currentTarget","onBlur","validate","mask","inputClassNames","rt-input","rt-input--has-error","react_input_mask_default","join","alwaysShowMask","React","countryOptions","isoCode","map","country","label","code","PhoneForm","onSubmit","values","phone_number","phone","_componentDidMount","asyncToGenerator","mark","_callee","countryCode","defaultCountryOption","getCountryCode","toLowerCase","setState","mutators","resetPhone","changeValue","initialValues","_ref2","handleSubmit","form","LogoIcon_LogoIcon","index_es","defaultMessage","Label_Label","Select_Select","MaskedInput_MaskedInput","Input","errorMessage","CodeForm","catch","sendViaSms","Input_Input","PasswordForm","LoginForm","renderForm","PhoneForm_PhoneForm","CodeForm_CodeForm","PasswordForm_PasswordForm","Login","app","Redirect","to","Helmet","LoginForm_LoginForm","Component","AppLoading","PrivateRoute","component","Route","render","AppLoading_AppLoading","es_Redirect","AppRoute","App","_Component","Switch","path","exact","addLocaleData","toConsumableArray","en","messages","TextComponent","ConnectedIntlProvider","locale","IntlProvider","apiHash","process","environmentDefault","apiId","isLoggerEnabled","useTestDC","REACT_APP_TELEGRAM_PRODUCTION_DC","environmentProduction","environment","rootSaga","rootSaga_marked","rootReducer","combineReducers","logger","createLogger","predicate","sagaMiddleware","createSagaMiddleware","AppHistory","createBrowserHistory","rootElement","document","getElementById","AppStore","preloadedState","store","createStore","applyMiddleware","thunk","run","configureStore","ReactDOM","es","textComponent","Router","history","TAB_MODE_CLASSNAME","onMouseMove","body","classList","remove","enableTabMode","module","exports","Worker","__webpack_require__","p"],"mappings":"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","file":"static/js/main.259af0ca.chunk.js","sourcesContent":["import { all, takeEvery, call, put } from 'redux-saga/effects';\nimport { eventChannel } from 'redux-saga';\n\nimport { TelegramMessageReceivedActionType, TelegramMessageSendActionType } from '../actions/telegramActions';\nimport { AUTHORIZATION_STATES } from '../reducers/appReducer';\n\nconst TelegramWorker = require('../../services/telegram.worker');\n\nlet worker: any;\n\nfunction createWorker () {\n  worker = new TelegramWorker();\n  \n  return eventChannel((emit: any) => {\n    worker.onmessage = (event: any) => {\n      emit({\n        type: TelegramMessageReceivedActionType.SUCCESS,\n        payload: {\n          data: event.data,\n        }\n      });\n    };\n    \n    return worker.terminate;\n  });\n}\n\nfunction* subscribeToTelegramWorker () {\n  const channel = yield createWorker();\n  \n  yield takeEvery(channel, dispatchMessage);\n}\n\nfunction* dispatchMessage (action: any) {\n  return yield put(action);\n}\n\nfunction sendMessage (action: any) {\n  if (!worker) {\n    throw new Error('Worker is not yet ready');\n  }\n  \n  worker.postMessage({\n    type: 'send',\n    payload: action.payload,\n  });\n}\n\nexport const asyncSendMessage = (message: any): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const onMessageReceived = (event: any) => {\n      worker.removeEventListener('message', onMessageReceived);\n      \n      if (event.data['@type'] === 'error') {\n        return reject(event.data);\n      }\n      \n      return resolve(event.data);\n    };\n    \n    worker.addEventListener('message', onMessageReceived);\n  \n    worker.postMessage({\n      type: 'send',\n      payload: message,\n    });\n  });\n};\n\nfunction loadInitialData (action: any) {\n  switch (action.payload.data['@type']) {\n    case 'updateAuthorizationState': {\n      if (action.payload.data.authorization_state['@type'] === AUTHORIZATION_STATES.AUTHORIZED) {\n        worker.postMessage({\n          type: 'send',\n          payload: {\n            '@type': 'setOption',\n            name: 'online',\n            value: {\n              '@type': 'optionValueBoolean',\n              value: true,\n            },\n          }\n        });\n      }\n    }\n  }\n}\n\nexport function* telegramSaga () {\n  return yield all([\n    call(subscribeToTelegramWorker),\n    takeEvery(TelegramMessageReceivedActionType.SUCCESS, loadInitialData),\n    takeEvery(TelegramMessageSendActionType.SUCCESS, sendMessage)\n  ]);\n}\n","import React from 'react';\nimport {\n  connect as originalConnect,\n  MapDispatchToPropsParam,\n  MapStateToPropsParam,\n  MergeProps,\n  Options,\n} from 'react-redux';\n\nimport { RootState } from './reducers/rootReducer';\n\nexport type InferableComponentEnhancerWithProps<IInjectedProps, INeedsProps> =\n  <IComponent extends React.ComponentType<IInjectedProps & INeedsProps>>(component: IComponent) => IComponent\n\nexport interface IConnect {\n  <IStateProps = {}, IDispatchProps = {}, IOwnProps = {}> (\n    mapStateToProps?: MapStateToPropsParam<IStateProps, IOwnProps, RootState>,\n    mapDispatchToProps?: MapDispatchToPropsParam<IDispatchProps, IOwnProps>,\n  ): InferableComponentEnhancerWithProps<IStateProps & IDispatchProps, IOwnProps>\n  \n  <IStateProps = {}, IDispatchProps = {}, IOwnProps = {}, IMergedProps = {}> (\n    mapStateToProps?: MapStateToPropsParam<IStateProps, IOwnProps, RootState>,\n    mapDispatchToProps?: MapDispatchToPropsParam<IDispatchProps, IOwnProps>,\n    mergeProps?: MergeProps<IStateProps, IDispatchProps, IOwnProps, IMergedProps>,\n    options?: Options<IStateProps, IOwnProps, IMergedProps>,\n  ): InferableComponentEnhancerWithProps<IMergedProps, IOwnProps>\n  \n}\n\nexport const connect = originalConnect as IConnect;","const types: string[] = [];\n\nexport interface ActionType {\n  FETCHING: string;\n  SUCCESS: string;\n  FAILURE: string;\n}\n\nexport const actionType = (action: string): ActionType => {\n  const actionType = action.toUpperCase();\n  \n  if (types.includes(actionType)) {\n    throw new Error(`ActionType \"${actionType}\" already exists`);\n  }\n  \n  types.push(action);\n  \n  return {\n    SUCCESS: `${actionType}_SUCCESS`,\n    FAILURE: `${actionType}_FAILURE`,\n    FETCHING: `${actionType}_FETCHING`,\n  };\n};\n","import { actionType } from '../../utils/actionType';\n\nexport const TelegramMessageReceivedActionType = actionType('telegram-message-received');\nexport const TelegramMessageSendActionType     = actionType('telegram-message-send');\n\nexport const sendMessage = (message: any) => {\n  return (dispatch: any) => {\n    dispatch({\n      type: TelegramMessageSendActionType.SUCCESS,\n      payload: message,\n    });\n  }\n};\n\nexport interface TelegramActions  {\n  sendMessage: (message: any) => (dispatch: any) => void;\n}\n","import { TelegramMessageReceivedActionType } from '../actions/telegramActions';\n\nexport const AUTHORIZATION_STATES = {\n  PHONE_NUMBER: 'authorizationStateWaitPhoneNumber',\n  CODE: 'authorizationStateWaitCode',\n  PASSWORD: 'authorizationStateWaitPassword',\n  AUTHORIZED: 'authorizationStateReady',\n  LOGGING_OUT: 'authorizationStateLoggingOut',\n  LOADING: 'authorizationStateWaitEncryptionKey'\n};\n\nexport interface AppState {\n  ready: boolean;\n  authState: string;\n  connecting: boolean;\n}\n\nconst initialState: AppState = {\n  ready: false,\n  connecting: true,\n  authState: AUTHORIZATION_STATES.LOADING,\n};\n\nexport const appReducer = (state: AppState = initialState, action: any): AppState => {\n  switch (action.type) {\n    case TelegramMessageReceivedActionType.SUCCESS: {\n      switch (action.payload.data['@type']) {\n        case 'updateConnectionState': {\n          switch (action.payload.data.state['@type']) {\n            case 'connectionStateConnecting': {\n              return {\n                ...state,\n                connecting: true,\n              };\n            }\n            \n            case 'connectionStateReady': {\n              return {\n                ...state,\n                connecting: false,\n              };\n            }\n          }\n          \n          return state;\n        }\n        \n        case 'updateAuthorizationState': {\n          return {\n            ...state,\n            authState: action.payload.data.authorization_state['@type'],\n          };\n        }\n        \n        case 'ok': {\n          if (action.payload.data['@extra'] && action.payload.data['@extra']['@type'] === 'setTdlibParameters') {\n            return {\n              ...state,\n              ready: true,\n            };\n          } else {\n            return state;\n          }\n        }\n        \n        default: {\n          return state;\n        }\n      }\n    }\n    \n    default: {\n      return state;\n    }\n  }\n};\n","import { TelegramMessageSendActionType } from './telegramActions';\nimport { actionType } from '../../utils/actionType';\nimport { asyncSendMessage } from '../sagas/telegramSaga';\n\nconst LogoutActionTypes = actionType('logout');\n\nexport const logout = () => {\n  return (dispatch: any) => {\n    dispatch({\n      type: LogoutActionTypes.FETCHING,\n    });\n    \n    return asyncSendMessage({ '@type': 'logOut' })\n      .then((data) => {\n        console.log(data);\n      });\n  };\n};\n\nexport interface AuthActions {\n  logout: () => (dispatch: any) => void;\n}\n","import React, { ButtonHTMLAttributes, PureComponent } from 'react';\nimport classNames from 'classnames';\n\nimport './button.scss';\n\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement>;\n\nexport class Button extends PureComponent<ButtonProps> {\n  render () {\n    const { className, ...restProps } = this.props;\n    \n    const rootClassNames = classNames({\n      'rt-button': true,\n      [className as string]: className,\n    });\n    \n    return (\n      <button { ...restProps }\n              className={ rootClassNames }>\n        { this.props.children }\n      </button>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { bindActionCreators } from 'redux';\n\nimport { connect } from '../../../store/connect';\nimport { AuthActions, logout } from '../../../store/actions/authActions';\n\nimport { Button } from '../../common/button/Button';\n\n@connect<{}, AuthActions>(null, mapDispatchToProps)\nclass LogoutButtonWrapper extends PureComponent<AuthActions> {\n  render () {\n    return (\n      <Button className='ri-logout-button'\n              onClick={ this.props.logout }>\n        Logout\n      </Button>\n    );\n  }\n}\n\nfunction mapDispatchToProps (dispatch: any) {\n  return bindActionCreators({ logout }, dispatch);\n}\n\nexport const LogoutButton: React.ComponentType = LogoutButtonWrapper as any;\n","import React, { PureComponent } from 'react';\n\nimport { LogoutButton } from '../../auth/logout-button/LogoutButton';\n\nexport class Messenger extends PureComponent {\n  render () {\n    return (\n      <div>\n        app ready\n        \n        <LogoutButton/>\n      </div>\n    );\n  }\n}\n","export class GeoApiService {\n  static getCountryCode () {\n    return fetch('https://ip.nf/me.json')\n      .then(response => {\n        return response.json();\n      })\n      .then((data) => {\n        return data.ip.country_code;\n      });\n  }\n}\n","import SpriteSymbol from \"svg-baker-runtime/browser-symbol\";\nimport sprite from \"svg-sprite-loader/runtime/browser-sprite.build\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"logo\",\n  \"use\": \"logo-usage\",\n  \"viewBox\": \"0 0 240 240\",\n  \"content\": \"<symbol xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 240 240\\\" id=\\\"logo\\\"><defs><linearGradient id=\\\"logo_a\\\" x1=\\\".667\\\" y1=\\\".167\\\" x2=\\\".417\\\" y2=\\\".75\\\"><stop stop-color=\\\"#37aee2\\\" offset=\\\"0\\\" /><stop stop-color=\\\"#1e96c8\\\" offset=\\\"1\\\" /></linearGradient><linearGradient id=\\\"logo_b\\\" x1=\\\".66\\\" y1=\\\".437\\\" x2=\\\".851\\\" y2=\\\".802\\\"><stop stop-color=\\\"#eff7fc\\\" offset=\\\"0\\\" /><stop stop-color=\\\"#fff\\\" offset=\\\"1\\\" /></linearGradient></defs><circle cx=\\\"120\\\" cy=\\\"120\\\" r=\\\"120\\\" fill=\\\"url(#logo_a)\\\" /><path fill=\\\"#c8daea\\\" d=\\\"m98 175c-3.8876 0-3.227-1.4679-4.5678-5.1695L82 132.2059 170 80\\\" /><path fill=\\\"#a9c9dd\\\" d=\\\"m98 175c3 0 4.3255-1.372 6-3l16-15.558-19.958-12.035\\\" /><path fill=\\\"url(#logo_b)\\\" d=\\\"m100.04 144.41 48.36 35.729c5.5185 3.0449 9.5014 1.4684 10.876-5.1235l19.685-92.763c2.0154-8.0802-3.0801-11.745-8.3594-9.3482l-115.59 44.571c-7.8901 3.1647-7.8441 7.5666-1.4382 9.528l29.663 9.2583 68.673-43.325c3.2419-1.9659 6.2173-0.90899 3.7752 1.2584\\\" /></symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import { makeIcon } from '../../../utils/makeIcon';\n\nimport TelegramLogo from '../../../assets/icons/logo.svg';\n\nexport const LogoIcon = ({ className }: { className?: string }) => makeIcon(TelegramLogo.id, className);","import React from 'react';\n\nexport const makeIcon = (iconId: string, className?: string) => {\n  return (\n    <svg className={ className }\n         focusable='false'>\n      <use xlinkHref={ `#${iconId}` }/>\n    </svg>\n  );\n};\n","import React, { PureComponent } from 'react';\nimport classNames from 'classnames';\n\nimport './label.scss';\n\ninterface LabelProps {\n  title?: string | React.ReactNode;\n  className?: string;\n}\n\nexport class Label extends PureComponent<LabelProps> {\n  render () {\n    const { className, title } = this.props;\n    \n    const rootClassNames = classNames({\n      'rt-label': true,\n      [className as string]: className,\n    });\n    \n    return (\n      <label className={ rootClassNames }>\n        { title && (\n          <div className='rt-label__title'>\n            { title }\n          </div>\n        ) }\n        \n        { this.props.children }\n      </label>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { Field } from 'react-final-form';\nimport ReactSelect from 'react-select';\nimport classNames from 'classnames';\n\nimport './select.scss';\n\ninterface SelectProps {\n  name: string;\n  options: any;\n  placeholder?: string;\n  className?: string;\n  onChange?: (value: any) => void;\n  disabled?: boolean;\n  error?: string;\n  isSearchable?: boolean;\n}\n\nexport class Select extends PureComponent<SelectProps> {\n  static defaultProps = {\n    isSearchable: false,\n  };\n  \n  render () {\n    const { name, options, placeholder, disabled, className, error, isSearchable } = this.props;\n    \n    return (\n      <Field name={ name }>\n        { ({ input, meta }) => {\n          const hasError = (meta.error && meta.touched) || (meta.submitError && !meta.dirtySinceLastSubmit);\n          \n          const onChange = (selectedOption: any) => {\n            input.onChange(selectedOption.value);\n            \n            this.onChange(selectedOption);\n          };\n          \n          const selectedOption = this.getSelectedOption(input.value) || null;\n          \n          const rootClassNames = classNames({\n            'rt-select': true,\n            'rt-select--has-error': hasError,\n            [className as string]: className,\n          });\n          \n          return (\n            <div className={ rootClassNames }>\n              <ReactSelect { ...input }\n                           classNamePrefix={ 'rt-select' }\n                           className={ 'rt-select__container' }\n                           options={ options }\n                           value={ selectedOption }\n                           onChange={ onChange }\n                           placeholder={ placeholder }\n                           isDisabled={ disabled }\n                           components={ {\n                             DropdownIndicator: null,\n                           } }\n                           isSearchable={ isSearchable }\n                           isClearable={ false }/>\n              { hasError && (\n                <div className='rt-select__error'>\n                  { error }\n                </div>\n              ) }\n            </div>\n          );\n        } }\n      </Field>\n    );\n  }\n  \n  private getSelectedOption = (value: any) => {\n    const { options } = this.props;\n    \n    return options.find((option: any) => option.value === value || (value && value.toString() === option.value.toString()));\n  };\n  \n  private onChange = (newValue: any) => {\n    if (this.props.onChange) {\n      this.props.onChange(newValue);\n    }\n  };\n}\n","import React from 'react';\nimport { Field } from 'react-final-form';\nimport classNames from 'classnames';\nimport InputMask from 'react-input-mask';\n\ninterface MaskedInputProps {\n  name: string;\n  mask: string;\n  value?: string;\n  type?: string;\n  validate?: (value: string) => boolean;\n  className?: string;\n  placeholder?: string;\n  onChange?: (currentValue: string) => void;\n  onBlur?: (event: any) => void;\n  disabled?: boolean;\n  error?: string;\n}\n\nconst validateMask = (value: string) => {\n  if (!value || value.indexOf('_') > -1) {\n    return 'default';\n  }\n  \n  return false;\n};\n\nexport class MaskedInput extends React.PureComponent<MaskedInputProps> {\n  render () {\n    const { error, name, validate, className, type, mask, disabled, placeholder } = this.props;\n    \n    return (\n      <Field name={ name }\n             validate={ validate || validateMask }>\n        { ({ input, meta }) => {\n          const hasError = (meta.error && meta.touched) || (meta.submitError && !meta.dirtySinceLastSubmit);\n          \n          const onChange = (event: any) => {\n            input.onChange(event);\n            \n            this.onChange(event);\n          };\n          \n          const onBlur = (event: any) => {\n            input.onBlur(event);\n            \n            this.onBlur(event);\n          };\n          \n          const inputClassNames = classNames({\n            'rt-input': true,\n            'rt-input--has-error': hasError,\n          });\n          \n          return (\n            <div className={ inputClassNames }>\n              <InputMask { ...input }\n                         className={ ['rt-input__input', className].join(' ') }\n                         mask={ mask }\n                         onChange={ onChange }\n                         alwaysShowMask={ true }\n                         type={ type }\n                         onBlur={ onBlur }\n                         name={ name }\n                         disabled={ disabled }\n                         placeholder={ placeholder }/>\n              \n              { hasError &&\n              <div className='rt-input__error'>\n                { error }\n              </div>\n              }\n            </div>\n          );\n        }\n        }\n      </Field>\n    );\n  }\n  \n  private onChange = (event: any) => {\n    if (this.props.onChange) {\n      this.props.onChange(event.currentTarget.value);\n    }\n  };\n  \n  private onBlur = (event: any) => {\n    if (this.props.onBlur) {\n      this.props.onBlur(event);\n    }\n  };\n}\n","import React, { PureComponent } from 'react';\nimport { Form } from 'react-final-form';\nimport { FormattedMessage } from 'react-intl';\n\nimport { GeoApiService } from '../../../services/GeoApiService';\n\nimport { LogoIcon } from '../../common/icons/LogoIcon';\nimport { Label } from '../../forms/label/Label';\nimport { Button } from '../../common/button/Button';\nimport { Select } from '../../forms/select/Select';\nimport { MaskedInput } from '../../forms/masked-input/MaskedInput';\n\nimport { COUNTRY_PHONE } from '../../../constants/CountryPhone';\n\nimport './phone-form.scss';\n\ninterface PhoneFormProps {\n  onSubmit: (message: any) => void;\n}\n\ninterface PhoneFormState {\n  mask?: string;\n}\n\nconst countryOptions = COUNTRY_PHONE.map((country: any) => {\n  return {\n    label: country.name,\n    value: country.mask,\n    code: country.isoCode,\n  };\n});\n\nexport class PhoneForm extends PureComponent<PhoneFormProps, PhoneFormState> {\n  state: PhoneFormState = {};\n  \n  async componentDidMount () {\n    const countryCode = await GeoApiService.getCountryCode();\n    \n    const defaultCountryOption = countryOptions.find((option) => {\n      return option.code === countryCode.toLowerCase();\n    }) || countryOptions[0];\n    \n    this.setState({\n      mask: defaultCountryOption.value,\n    });\n  }\n  \n  onSubmit = (values: any) => {\n    this.props.onSubmit({\n      '@type': 'setAuthenticationPhoneNumber',\n      phone_number: values.phone,\n    });\n  };\n  \n  render () {\n    return (\n      <Form onSubmit={ this.onSubmit }\n            mutators={ {\n              resetPhone: (args, state, { changeValue }) => changeValue(state, 'phone', () => undefined),\n            } }\n            initialValues={ {\n              mask: this.state.mask,\n            } }>\n        { ({ handleSubmit, values, form }) => {\n          return (\n            <form onSubmit={ handleSubmit } className='rt-phone-form'>\n              <div className='rt-phone-form__header'>\n                <LogoIcon className='rt-phone-form__logo'/>\n                \n                <div className='rt-phone-form__title'>\n                  <FormattedMessage id={ 'components.phone-form.title' }\n                                    defaultMessage={ 'Telegram' }/>\n                </div>\n                \n                <div className='rt-phone-form__subtitle'>\n                  <FormattedMessage id={ 'components.phone-form.subtitle' }\n                                    defaultMessage={ 'Welcome to the web application' }/>\n                </div>\n              </div>\n              \n              <div className='rt-phone-form__body'>\n                <Label className='rt-phone-form__label'\n                       title={ <FormattedMessage id={ 'components.phone-form.country' }\n                                                 defaultMessage={ 'Country' }/> }>\n                  <Select name={ 'mask' }\n                          isSearchable={ true }\n                          onChange={ form.mutators.resetPhone }\n                          options={ countryOptions }/>\n                </Label>\n  \n                <Label className='rt-phone-form__label'\n                       title={ <FormattedMessage id={ 'components.phone-form.phone-number' }\n                                                 defaultMessage={ 'Your phone' }/> }>\n                  <MaskedInput name={ 'phone' }\n                               mask={ values.mask }/>\n                </Label>\n  \n                <Button className='rt-phone-form__submit rt-button--primary'>\n                  <FormattedMessage id={ 'components.phone-form.submit' }\n                                    defaultMessage={ 'Next' }/>\n                </Button>\n              </div>\n            </form>\n          );\n        } }\n      </Form>\n    );\n  }\n}","export const COUNTRY_PHONE = [\n  {\n    'name': 'Afghanistan (‫افغانستان‬‎)',\n    'isoCode': 'af',\n    'mask': '+\\\\93-99-999-9999'\n  }, {\n    'name': 'Albania (Shqipëri)',\n    'isoCode': 'al',\n    'mask': '+355(999)999-999',\n  }, { 'name': 'Algeria (‫الجزائر‬‎)', 'isoCode': 'dz', 'mask': '+213-99-999-9999' }, {\n    'name': 'American Samoa',\n    'isoCode': 'as',\n    'mask': '+1(684)999-9999',\n  }, { 'name': 'Andorra', 'isoCode': 'ad', 'mask': '+376-999-999' }, {\n    'name': 'Angola',\n    'isoCode': 'ao',\n    'mask': '+244(999)999-999',\n  }, { 'name': 'Anguilla', 'isoCode': 'ai', 'mask': '+1(264)999-9999' }, {\n    'name': 'Antigua and Barbuda',\n    'isoCode': 'ag',\n    'mask': '+1(268)999-9999',\n  }, { 'name': 'Argentina', 'isoCode': 'ar', 'mask': '+54(999)999-9999' }, {\n    'name': 'Armenia (Հայաստան)',\n    'isoCode': 'am',\n    'mask': '+374-99-999-999',\n  }, { 'name': 'Aruba', 'isoCode': 'aw', 'mask': '+2\\\\97-999-9999' }, {\n    'name': 'Australia',\n    'isoCode': 'au',\n    'mask': '+61 999 999 999',\n  }, { 'name': 'Austria (Österreich)', 'isoCode': 'at', 'mask': '+43(999)999-9999' }, {\n    'name': 'Azerbaijan (Azərbaycan)',\n    'isoCode': 'az',\n    'mask': '+\\\\9\\\\94-99-999-99-99',\n  }, { 'name': 'Bahamas', 'isoCode': 'bs', 'mask': '+1(242)999-9999' }, {\n    'name': 'Bahrain (‫البحرين‬‎)',\n    'isoCode': 'bh',\n    'mask': '+\\\\973-9999-9999',\n  }, { 'name': 'Bangladesh (বাংলাদেশ)', 'isoCode': 'bd', 'mask': '+880-99-999-999' }, {\n    'name': 'Barbados',\n    'isoCode': 'bb',\n    'mask': '+1(246)999-9999',\n  }, { 'name': 'Belarus (Беларусь)', 'isoCode': 'by', 'mask': '+375(99)999-99-99' }, {\n    'name': 'Belgium (België)',\n    'isoCode': 'be',\n    'mask': '+32 999 99 99 99',\n  }, { 'name': 'Belize', 'isoCode': 'bz', 'mask': '+501-999-9999' }, {\n    'name': 'Benin (Bénin)',\n    'isoCode': 'bj',\n    'mask': '+22\\\\9-99-99-9999',\n  }, { 'name': 'Bermuda', 'isoCode': 'bm', 'mask': '+1(441)999-9999' }, {\n    'name': 'Bhutan (འབྲུག)',\n    'isoCode': 'bt',\n    'mask': '+\\\\975-9-999-999',\n  }, {\n    'name': 'Bolivia',\n    'isoCode': 'bo',\n    'mask': '+5\\\\91-9-999-9999',\n  }, {\n    'name': 'Bosnia and Herzegovina (Босна и Херцеговина)',\n    'isoCode': 'ba',\n    'mask': '+387-99-9999',\n  }, { 'name': 'Botswana', 'isoCode': 'bw', 'mask': '+267-99-999-999' }, {\n    'name': 'Brazil (Brasil)',\n    'isoCode': 'br',\n    'mask': '+55-99-9999-9999',\n  }, {\n    'name': 'British Indian Ocean Territory',\n    'isoCode': 'io',\n    'mask': '+246-999-9999',\n  }, { 'name': 'British Virgin Islands', 'isoCode': 'vg', 'mask': '+1(284)999-9999' }, {\n    'name': 'Brunei',\n    'isoCode': 'bn',\n    'mask': '+673-999-9999',\n  }, { 'name': 'Bulgaria (България)', 'isoCode': 'bg', 'mask': '+35\\\\9(999)999-999' }, {\n    'name': 'Burkina Faso',\n    'isoCode': 'bf',\n    'mask': '+226-99-99-9999',\n  }, { 'name': 'Burundi (Uburundi)', 'isoCode': 'bi', 'mask': '+257-99-99-9999' }, {\n    'name': 'Cambodia (កម្ពុជា)',\n    'isoCode': 'kh',\n    'mask': '+855-99-999-999',\n  }, { 'name': 'Cameroon (Cameroun)', 'isoCode': 'cm', 'mask': '+237-9999-9999' }, {\n    'name': 'Canada',\n    'isoCode': 'ca',\n    'mask': '+1 (999) 999-9999',\n  }, { 'name': 'Cape Verde (Kabu Verdi)', 'isoCode': 'cv', 'mask': '+238(999)99-99' }, {\n    'name': 'Caribbean Netherlands',\n    'isoCode': 'bq',\n    'mask': '+5\\\\9\\\\9-999-9999',\n  }, {\n    'name': 'Cayman Islands',\n    'isoCode': 'ky',\n    'mask': '+1(345)999-9999',\n  }, {\n    'name': 'Central African Republic (République centrafricaine)',\n    'isoCode': 'cf',\n    'mask': '+236-99-99-9999',\n  }, { 'name': 'Chad (Tchad)', 'isoCode': 'td', 'mask': '+235-99-99-99-99' }, {\n    'name': 'Chile',\n    'isoCode': 'cl',\n    'mask': '+56-9-9999-9999',\n  }, { 'name': 'China (中国)', 'isoCode': 'cn', 'mask': '+86 99-99999999' }, {\n    'name': 'Colombia',\n    'isoCode': 'co',\n    'mask': '+57(999)999-9999',\n  }, {\n    'name': 'Comoros (‫جزر القمر‬‎)',\n    'isoCode': 'km',\n    'mask': '+26\\\\9-99-99999',\n  }, {\n    'name': 'Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)',\n    'isoCode': 'cd',\n    'mask': '+243(999)999-999',\n  }, {\n    'name': 'Congo (Republic) (Congo-Brazzaville)',\n    'isoCode': 'cg',\n    'mask': '+242-99-999-9999',\n  }, { 'name': 'Cook Islands', 'isoCode': 'ck', 'mask': '+682-99-999' }, {\n    'name': 'Costa Rica',\n    'isoCode': 'cr',\n    'mask': '+506 9999-9999',\n  }, { 'name': 'Côte d’Ivoire', 'isoCode': 'ci', 'mask': '+225-99-999-999' }, {\n    'name': 'Croatia (Hrvatska)',\n    'isoCode': 'hr',\n    'mask': '+385-99-999-999',\n  }, { 'name': 'Cuba', 'isoCode': 'cu', 'mask': '+53-9-999-9999' }, {\n    'name': 'Curaçao',\n    'isoCode': 'cw',\n    'mask': '+5\\\\9\\\\9-999-9999',\n  }, {\n    'name': 'Cyprus (Κύπρος)',\n    'isoCode': 'cy',\n    'mask': '+357-99-999-999',\n  }, {\n    'name': 'Czech Republic (Česká republika)',\n    'isoCode': 'cz',\n    'mask': '+420(999)999-999',\n  }, { 'name': 'Denmark (Danmark)', 'isoCode': 'dk', 'mask': '+45 99 99 99 99' }, {\n    'name': 'Djibouti',\n    'isoCode': 'dj',\n    'mask': '+253-99-99-99-99',\n  }, {\n    'name': 'Dominica',\n    'isoCode': 'dm',\n    'mask': '+1(767)999-9999',\n  }, {\n    'name': 'Dominican Republic (República Dominicana)',\n    'isoCode': 'do',\n    'mask': '+1(999)999-9999',\n  }, { 'name': 'Ecuador', 'isoCode': 'ec', 'mask': '+5\\\\93-9-999-9999' }, {\n    'name': 'Egypt (‫مصر‬‎)',\n    'isoCode': 'eg',\n    'mask': '+20(999)999-9999',\n  }, {\n    'name': 'El Salvador',\n    'isoCode': 'sv',\n    'mask': '+503 9999-9999',\n  }, {\n    'name': 'Equatorial Guinea (Guinea Ecuatorial)',\n    'isoCode': 'gq',\n    'mask': '+240-99-999-9999',\n  }, { 'name': 'Eritrea', 'isoCode': 'er', 'mask': '+2\\\\91-9-999-999' }, {\n    'name': 'Estonia (Eesti)',\n    'isoCode': 'ee',\n    'mask': '+372-999-9999',\n  }, { 'name': 'Ethiopia', 'isoCode': 'et', 'mask': '+251-99-999-9999' }, {\n    'name': 'Falkland Islands (Islas Malvinas)',\n    'isoCode': 'fk',\n    'mask': '+500-99999',\n  }, { 'name': 'Faroe Islands (Føroyar)', 'isoCode': 'fo', 'mask': '+2\\\\98-999-999' }, {\n    'name': 'Fiji',\n    'isoCode': 'fj',\n    'mask': '+67\\\\9-99-99999',\n  }, { 'name': 'Finland (Suomi)', 'isoCode': 'fi', 'mask': '+358 99 9999 9999' }, {\n    'name': 'France',\n    'isoCode': 'fr',\n    'mask': '+33 9 99 99 99 99',\n  }, {\n    'name': 'French Guiana (Guyane française)',\n    'isoCode': 'gf',\n    'mask': '+5\\\\94-99999-9999',\n  }, { 'name': 'French Polynesia (Polynésie française)', 'isoCode': 'pf', 'mask': '+68\\\\9-99-99-99' }, {\n    'name': 'Gabon',\n    'isoCode': 'ga',\n    'mask': '+241-9-99-99-99',\n  }, { 'name': 'Gambia', 'isoCode': 'gm', 'mask': '+220(999)99-99' }, {\n    'name': 'Georgia (საქართველო)',\n    'isoCode': 'ge',\n    'mask': '+\\\\9\\\\95(999)999-999',\n  }, { 'name': 'Germany (Deutschland)', 'isoCode': 'de', 'mask': '+4\\\\9 999 9999999' }, {\n    'name': 'Ghana (Gaana)',\n    'isoCode': 'gh',\n    'mask': '+233(999)999-999',\n  }, { 'name': 'Gibraltar', 'isoCode': 'gi', 'mask': '+350-999-99999' }, {\n    'name': 'Greece (Ελλάδα)',\n    'isoCode': 'gr',\n    'mask': '+30(999)999-9999',\n  }, { 'name': 'Greenland (Kalaallit Nunaat)', 'isoCode': 'gl', 'mask': '+2\\\\9\\\\9-99-99-99' }, {\n    'name': 'Grenada',\n    'isoCode': 'gd',\n    'mask': '+1(473)999-9999',\n  }, { 'name': 'Guadeloupe', 'isoCode': 'gp', 'mask': '999999999999999' }, {\n    'name': 'Guam',\n    'isoCode': 'gu',\n    'mask': '+1(671)999-9999',\n  }, { 'name': 'Guatemala', 'isoCode': 'gt', 'mask': '+502 9999-9999' }, {\n    'name': 'Guinea (Guinée)',\n    'isoCode': 'gn',\n    'mask': '+224-99-999-999',\n  }, { 'name': 'Guinea-Bissau (Guiné Bissau)', 'isoCode': 'gw', 'mask': '+245-9-999999' }, {\n    'name': 'Guyana',\n    'isoCode': 'gy',\n    'mask': '+5\\\\92-999-9999',\n  }, { 'name': 'Haiti', 'isoCode': 'ht', 'mask': '+50\\\\9 9999-9999' }, {\n    'name': 'Honduras',\n    'isoCode': 'hn',\n    'mask': '+504-9999-9999',\n  }, { 'name': 'Hong Kong (香港)', 'isoCode': 'hk', 'mask': '+852 9999 9999' }, {\n    'name': 'Hungary (Magyarország)',\n    'isoCode': 'hu',\n    'mask': '+36(999)999-999',\n  }, { 'name': 'Iceland (Ísland)', 'isoCode': 'is', 'mask': '+354 999 9999' }, {\n    'name': 'India (भारत)',\n    'isoCode': 'in',\n    'mask': '+\\\\91 99999-99999',\n  }, { 'name': 'Indonesia', 'isoCode': 'id', 'mask': '+62-99-999-99' }, {\n    'name': 'Iran (‫ایران‬‎)',\n    'isoCode': 'ir',\n    'mask': '+\\\\98(999)999-9999',\n  }, { 'name': 'Iraq (‫العراق‬‎)', 'isoCode': 'iq', 'mask': '+\\\\964(999)999-9999' }, {\n    'name': 'Ireland',\n    'isoCode': 'ie',\n    'mask': '+353 99 9999999',\n  }, { 'name': 'Israel (‫ישראל‬‎)', 'isoCode': 'il', 'mask': '+\\\\972-9-999-9999' }, {\n    'name': 'Italy (Italia)',\n    'isoCode': 'it',\n    'mask': '+3\\\\9 999 999999',\n  }, { 'name': 'Jamaica', 'isoCode': 'jm', 'mask': '+1(876)999-9999' }, {\n    'name': 'Japan (日本)',\n    'isoCode': 'jp',\n    'mask': '+81 999 99 9999',\n  }, { 'name': 'Jordan (‫الأردن‬‎)', 'isoCode': 'jo', 'mask': '+\\\\962-9-9999-9999' }, {\n    'name': 'Kazakhstan (Казахстан)',\n    'isoCode': 'kz',\n    'mask': '+7 999 999-99-99',\n  }, { 'name': 'Kenya', 'isoCode': 'ke', 'mask': '+254-999-999999' }, {\n    'name': 'Kiribati',\n    'isoCode': 'ki',\n    'mask': '+686-99-999',\n  }, { 'name': 'Kuwait (‫الكويت‬‎)', 'isoCode': 'kw', 'mask': '+\\\\965-9999-9999' }, {\n    'name': 'Kyrgyzstan (Кыргызстан)',\n    'isoCode': 'kg',\n    'mask': '+\\\\9\\\\96(999)999-999',\n  }, { 'name': 'Laos (ລາວ)', 'isoCode': 'la', 'mask': '+856-99-999-999' }, {\n    'name': 'Latvia (Latvija)',\n    'isoCode': 'lv',\n    'mask': '+371-99-999-999',\n  }, { 'name': 'Lebanon (‫لبنان‬‎)', 'isoCode': 'lb', 'mask': '+\\\\961-9-999-999' }, {\n    'name': 'Lesotho',\n    'isoCode': 'ls',\n    'mask': '+266-9-999-9999',\n  }, { 'name': 'Liberia', 'isoCode': 'lr', 'mask': '+231-99-999-999' }, {\n    'name': 'Libya (‫ليبيا‬‎)',\n    'isoCode': 'ly',\n    'mask': '+218-99-999-999',\n  }, { 'name': 'Liechtenstein', 'isoCode': 'li', 'mask': '+423(999)999-9999' }, {\n    'name': 'Lithuania (Lietuva)',\n    'isoCode': 'lt',\n    'mask': '+370(999)99-999',\n  }, { 'name': 'Luxembourg', 'isoCode': 'lu', 'mask': '+352(999)999-999' }, {\n    'name': 'Macau (澳門)',\n    'isoCode': 'mo',\n    'mask': '+853-9999-9999',\n  }, {\n    'name': 'Macedonia (FYROM) (Македонија)',\n    'isoCode': 'mk',\n    'mask': '+38\\\\9-99-999-999',\n  }, { 'name': 'Madagascar (Madagasikara)', 'isoCode': 'mg', 'mask': '+261-99-99-99999' }, {\n    'name': 'Malawi',\n    'isoCode': 'mw',\n    'mask': '+265-9-9999-9999',\n  }, { 'name': 'Malaysia', 'isoCode': 'my', 'mask': '+60 99-9999-9999' }, {\n    'name': 'Maldives',\n    'isoCode': 'mv',\n    'mask': '+\\\\960-999-9999',\n  }, { 'name': 'Mali', 'isoCode': 'ml', 'mask': '+223-99-99-9999' }, {\n    'name': 'Malta',\n    'isoCode': 'mt',\n    'mask': '+356-9999-9999',\n  }, { 'name': 'Marshall Islands', 'isoCode': 'mh', 'mask': '+6\\\\92-999-9999' }, {\n    'name': 'Martinique',\n    'isoCode': 'mq',\n    'mask': '+5\\\\96(999)99-99-99',\n  }, { 'name': 'Mauritania (‫موريتانيا‬‎)', 'isoCode': 'mr', 'mask': '+222-99-99-9999' }, {\n    'name': 'Mauritius (Moris)',\n    'isoCode': 'mu',\n    'mask': '+230-999-9999',\n  }, { 'name': 'Mexico (México)', 'isoCode': 'mx', 'mask': '+52-99-99-9999' }, {\n    'name': 'Micronesia',\n    'isoCode': 'fm',\n    'mask': '+6\\\\91-999-9999',\n  }, { 'name': 'Moldova (Republica Moldova)', 'isoCode': 'md', 'mask': '+373-9999-9999' }, {\n    'name': 'Monaco',\n    'isoCode': 'mc',\n    'mask': '+377-99-999-999',\n  }, { 'name': 'Mongolia (Монгол)', 'isoCode': 'mn', 'mask': '+\\\\976-99-99-9999' }, {\n    'name': 'Montenegro (Crna Gora)',\n    'isoCode': 'me',\n    'mask': '+382-99-999-999',\n  }, { 'name': 'Montserrat', 'isoCode': 'ms', 'mask': '+1(664)999-9999' }, {\n    'name': 'Morocco (‫المغرب‬‎)',\n    'isoCode': 'ma',\n    'mask': '+212-99-9999-999',\n  }, {\n    'name': 'Mozambique (Moçambique)',\n    'isoCode': 'mz',\n    'mask': '+258-99-999-999',\n  }, { 'name': 'Myanmar (Burma) (မြန်မာ)', 'isoCode': 'mm', 'mask': '+\\\\95-999-999' }, {\n    'name': 'Namibia (Namibië)',\n    'isoCode': 'na',\n    'mask': '+264-99-999-9999',\n  }, { 'name': 'Nauru', 'isoCode': 'nr', 'mask': '+674-999-9999' }, {\n    'name': 'Nepal (नेपाल)',\n    'isoCode': 'np',\n    'mask': '+\\\\977-99-999-999',\n  }, {\n    'name': 'Netherlands (Nederland)',\n    'isoCode': 'nl',\n    'mask': '+31 99 99999999',\n  }, { 'name': 'New Caledonia (Nouvelle-Calédonie)', 'isoCode': 'nc', 'mask': '+687-99-9999' }, {\n    'name': 'New Zealand',\n    'isoCode': 'nz',\n    'mask': '+64 999-999-9999',\n  }, { 'name': 'Nicaragua', 'isoCode': 'ni', 'mask': '+505-9999-9999' }, {\n    'name': 'Niger (Nijar)',\n    'isoCode': 'ne',\n    'mask': '+227-99-99-9999',\n  }, { 'name': 'Nigeria', 'isoCode': 'ng', 'mask': '+234-99-999-99' }, {\n    'name': 'Niue',\n    'isoCode': 'nu',\n    'mask': '+683-9999',\n  }, { 'name': 'Norfolk Island', 'isoCode': 'nf', 'mask': '+672-999-999' }, {\n    'name': 'North Korea (조선 민주주의 인민 공화국)',\n    'isoCode': 'kp',\n    'mask': '+850-999-999',\n  }, { 'name': 'Northern Mariana Islands', 'isoCode': 'mp', 'mask': '+1(670)999-9999' }, {\n    'name': 'Norway (Norge)',\n    'isoCode': 'no',\n    'mask': '+47 999 99 999',\n  }, { 'name': 'Oman (‫عُمان‬‎)', 'isoCode': 'om', 'mask': '+\\\\968-99-999-999' }, {\n    'name': 'Pakistan (‫پاکستان‬‎)',\n    'isoCode': 'pk',\n    'mask': '+\\\\92 999-9999999',\n  }, { 'name': 'Palau', 'isoCode': 'pw', 'mask': '+680-999-9999' }, {\n    'name': 'Palestine (‫فلسطين‬‎)',\n    'isoCode': 'ps',\n    'mask': '+\\\\970-99-999-9999',\n  }, { 'name': 'Panama (Panamá)', 'isoCode': 'pa', 'mask': '+507-999-9999' }, {\n    'name': 'Papua New Guinea',\n    'isoCode': 'pg',\n    'mask': '+675(999)99-999',\n  }, { 'name': 'Paraguay', 'isoCode': 'py', 'mask': '+5\\\\95(999)999-999' }, {\n    'name': 'Peru (Perú)',\n    'isoCode': 'pe',\n    'mask': '+51(999)999-999',\n  }, { 'name': 'Philippines', 'isoCode': 'ph', 'mask': '+63 999 9999' }, {\n    'name': 'Poland (Polska)',\n    'isoCode': 'pl',\n    'mask': '+48 999-999-999',\n  }, { 'name': 'Portugal', 'isoCode': 'pt', 'mask': '+351-99-999-9999' }, {\n    'name': 'Puerto Rico',\n    'isoCode': 'pr',\n    'mask': '+1 (999) 999-9999',\n  }, { 'name': 'Qatar (‫قطر‬‎)', 'isoCode': 'qa', 'mask': '+\\\\974-9999-9999' }, {\n    'name': 'Réunion (La Réunion)',\n    'isoCode': 're',\n    'mask': '+262-99999-9999',\n  }, { 'name': 'Romania (România)', 'isoCode': 'ro', 'mask': '+40-99-999-9999' }, {\n    'name': 'Russia (Россия)',\n    'isoCode': 'ru',\n    'mask': '+7 (999) 999-99-99',\n  }, { 'name': 'Rwanda', 'isoCode': 'rw', 'mask': '+250(999)999-999' }, {\n    'name': 'Saint Barthélemy (Saint-Barthélemy)',\n    'isoCode': 'bl',\n    'mask': '999999999999999',\n  }, { 'name': 'Saint Helena', 'isoCode': 'sh', 'mask': '999999999999999' }, {\n    'name': 'Saint Kitts and Nevis',\n    'isoCode': 'kn',\n    'mask': '+1(86\\\\9)999-9999',\n  }, {\n    'name': 'Saint Lucia',\n    'isoCode': 'lc',\n    'mask': '+1(758)999-9999',\n  }, {\n    'name': 'Saint Martin (Saint-Martin (partie française))',\n    'isoCode': 'mf',\n    'mask': '999999999999999',\n  }, {\n    'name': 'Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)',\n    'isoCode': 'pm',\n    'mask': '999999999999999',\n  }, { 'name': 'Saint Vincent and the Grenadines', 'isoCode': 'vc', 'mask': '+1(784)999-9999' }, {\n    'name': 'Samoa',\n    'isoCode': 'ws',\n    'mask': '+685-99-9999',\n  }, {\n    'name': 'San Marino',\n    'isoCode': 'sm',\n    'mask': '+378-9999-999999',\n  }, {\n    'name': 'São Tomé and Príncipe (São Tomé e Príncipe)',\n    'isoCode': 'st',\n    'mask': '+23\\\\9-99-99999',\n  }, {\n    'name': 'Saudi Arabia (‫المملكة العربية السعودية‬‎)',\n    'isoCode': 'sa',\n    'mask': '+\\\\966-9-999-9999',\n  }, { 'name': 'Senegal (Sénégal)', 'isoCode': 'sn', 'mask': '+221-99-999-9999' }, {\n    'name': 'Serbia (Србија)',\n    'isoCode': 'rs',\n    'mask': '+381-99-999-9999',\n  }, { 'name': 'Seychelles', 'isoCode': 'sc', 'mask': '+248-9-999-999' }, {\n    'name': 'Sierra Leone',\n    'isoCode': 'sl',\n    'mask': '+232-99-999999',\n  }, { 'name': 'Singapore', 'isoCode': 'sg', 'mask': '+65 9999-9999' }, {\n    'name': 'Sint Maarten',\n    'isoCode': 'sx',\n    'mask': '+1(721)999-9999',\n  }, { 'name': 'Slovakia (Slovensko)', 'isoCode': 'sk', 'mask': '+421(999)999-999' }, {\n    'name': 'Slovenia (Slovenija)',\n    'isoCode': 'si',\n    'mask': '+386-99-999-999',\n  }, { 'name': 'Solomon Islands', 'isoCode': 'sb', 'mask': '+677-99999' }, {\n    'name': 'Somalia (Soomaaliya)',\n    'isoCode': 'so',\n    'mask': '+252-9-999-999',\n  }, { 'name': 'South Africa', 'isoCode': 'za', 'mask': '+27-99-999-9999' }, {\n    'name': 'South Korea (대한민국)',\n    'isoCode': 'kr',\n    'mask': '+82-99-999-9999',\n  }, { 'name': 'South Sudan (‫جنوب السودان‬‎)', 'isoCode': 'ss', 'mask': '+211-99-999-9999' }, {\n    'name': 'Spain (España)',\n    'isoCode': 'es',\n    'mask': '+34 999 999 999',\n  }, { 'name': 'Sri Lanka (ශ්‍රී ලංකාව)', 'isoCode': 'lk', 'mask': '+\\\\94-99-999-9999' }, {\n    'name': 'Sudan (‫السودان‬‎)',\n    'isoCode': 'sd',\n    'mask': '+24\\\\9-99-999-9999',\n  }, { 'name': 'Suriname', 'isoCode': 'sr', 'mask': '+5\\\\97-999-999' }, {\n    'name': 'Swaziland',\n    'isoCode': 'sz',\n    'mask': '+268-99-99-9999',\n  }, { 'name': 'Sweden (Sverige)', 'isoCode': 'se', 'mask': '+46 99 999 99 99' }, {\n    'name': 'Switzerland (Schweiz)',\n    'isoCode': 'ch',\n    'mask': '+41 99 999 99 99',\n  }, { 'name': 'Syria (‫سوريا‬‎)', 'isoCode': 'sy', 'mask': '+\\\\963-99-9999-999' }, {\n    'name': 'Taiwan (台灣)',\n    'isoCode': 'tw',\n    'mask': '+886-9999-9999',\n  }, { 'name': 'Tajikistan', 'isoCode': 'tj', 'mask': '+\\\\9\\\\92-99-999-9999' }, {\n    'name': 'Tanzania',\n    'isoCode': 'tz',\n    'mask': '+255-99-999-9999',\n  }, { 'name': 'Thailand (ไทย)', 'isoCode': 'th', 'mask': '+66-99-999-999' }, {\n    'name': 'Timor-Leste',\n    'isoCode': 'tl',\n    'mask': '+670-999-9999',\n  }, { 'name': 'Togo', 'isoCode': 'tg', 'mask': '+228-99-999-999' }, {\n    'name': 'Tokelau',\n    'isoCode': 'tk',\n    'mask': '+6\\\\90-9999',\n  }, { 'name': 'Tonga', 'isoCode': 'to', 'mask': '+676-99999' }, {\n    'name': 'Trinidad and Tobago',\n    'isoCode': 'tt',\n    'mask': '+1(868)999-9999',\n  }, { 'name': 'Tunisia (‫تونس‬‎)', 'isoCode': 'tn', 'mask': '+216-99-999-999' }, {\n    'name': 'Turkey (Türkiye)',\n    'isoCode': 'tr',\n    'mask': '+\\\\90 999 999 99 99',\n  }, { 'name': 'Turkmenistan', 'isoCode': 'tm', 'mask': '+\\\\9\\\\93-9-999-9999' }, {\n    'name': 'Turks and Caicos Islands',\n    'isoCode': 'tc',\n    'mask': '+1(64\\\\9)999-9999',\n  }, { 'name': 'Tuvalu', 'isoCode': 'tv', 'mask': '+688-99999' }, {\n    'name': 'U.S. Virgin Islands',\n    'isoCode': 'vi',\n    'mask': '+1(340)999-9999',\n  }, { 'name': 'Uganda', 'isoCode': 'ug', 'mask': '+256(999)999-999' }, {\n    'name': 'Ukraine (Україна)',\n    'isoCode': 'ua',\n    'mask': '+380(99)999-99-99',\n  }, {\n    'name': 'United Arab Emirates (‫الإمارات العربية المتحدة‬‎)',\n    'isoCode': 'ae',\n    'mask': '+\\\\971-9-999-9999',\n  }, { 'name': 'United Kingdom', 'isoCode': 'gb', 'mask': '+44 9999 999999' }, {\n    'name': 'United States',\n    'isoCode': 'us',\n    'mask': '+1 (999) 999-9999',\n  }, { 'name': 'Uruguay', 'isoCode': 'uy', 'mask': '+5\\\\98-9-999-99-99' }, {\n    'name': 'Uzbekistan (Oʻzbekiston)',\n    'isoCode': 'uz',\n    'mask': '+\\\\9\\\\98-99-999-9999',\n  }, { 'name': 'Vanuatu', 'isoCode': 'vu', 'mask': '+678-99999' }, {\n    'name': 'Vatican City (Città del Vaticano)',\n    'isoCode': 'va',\n    'mask': '+3\\\\9 99 9999 9999',\n  }, { 'name': 'Venezuela', 'isoCode': 've', 'mask': '+58(999)999-9999' }, {\n    'name': 'Vietnam (Việt Nam)',\n    'isoCode': 'vn',\n    'mask': '+84-99-9999-999',\n  }, { 'name': 'Wallis and Futuna', 'isoCode': 'wf', 'mask': '+681-99-9999' }, {\n    'name': 'Yemen (‫اليمن‬‎)',\n    'isoCode': 'ye',\n    'mask': '+\\\\967-9-999-999',\n  }, { 'name': 'Zambia', 'isoCode': 'zm', 'mask': '+260-99-999-9999' }, {\n    'name': 'Zimbabwe',\n    'isoCode': 'zw',\n    'mask': '+263-9-999999',\n  }\n];\n","import React, { InputHTMLAttributes, PureComponent } from 'react';\nimport { Field } from 'react-final-form';\n\nimport './input.scss';\n\ntype InputProps = {\n  name: string;\n  validate?: (value: string) => any;\n  errorMessage?: string;\n} & InputHTMLAttributes<HTMLInputElement>;\n\nexport class Input extends PureComponent<InputProps> {\n  render (): React.ReactNode {\n    const { name, errorMessage, validate, ...restProps } = this.props;\n    \n    return (\n      <Field name={ name }\n             validate={ validate }>\n        { ({ input, meta }) => {\n          const hasError = meta.touched && meta.error;\n          \n          return (\n            <div className='rt-input'>\n              <input { ...input }\n                     { ...restProps }\n                     className='rt-input__input'/>\n              \n              { hasError && (\n                <div className='rt-input__error'>\n                  { errorMessage || meta.error }\n                </div>\n              ) }\n            </div>\n          );\n        } }\n      </Field>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { Form } from 'react-final-form';\nimport { Input } from '../../forms/input/Input';\nimport { asyncSendMessage } from '../../../store/sagas/telegramSaga';\n\ninterface CodeFormProps {\n  onSubmit: (message: any) => void;\n}\n\nexport class CodeForm extends PureComponent<CodeFormProps> {\n  onSubmit = (values: any) => {\n    asyncSendMessage({\n      '@type': 'checkAuthenticationCode',\n      ...values,\n    }).then((data) => {\n    })\n      .catch((error) => {\n      });\n  };\n  \n  sendViaSms = () => {\n    this.props.onSubmit({\n      '@type': 'resendAuthenticationCode',\n    });\n  };\n  \n  render () {\n    return (\n      <Form onSubmit={ this.onSubmit }>\n        { ({ handleSubmit }) => {\n          return (\n            <form onSubmit={ handleSubmit } className='rt-code-form'>\n              <h1>Enter code</h1>\n              \n              <Input name={ 'code' }/>\n              \n              <button type='button' onClick={ this.sendViaSms }>resend</button>\n              \n              <button>submit</button>\n            </form>\n          );\n        } }\n      </Form>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { Form } from 'react-final-form';\nimport { Input } from '../../forms/input/Input';\n\ninterface PasswordFormProps {\n  onSubmit: (message: any) => void;\n}\n\nexport class PasswordForm extends PureComponent<PasswordFormProps> {\n  onSubmit = (values: any) => {\n    this.props.onSubmit({\n      '@type': 'checkAuthenticationPassword',\n      ...values,\n    });\n  };\n  \n  render () {\n    return (\n      <Form onSubmit={ this.onSubmit }>\n        { ({ handleSubmit }) => {\n          return (\n            <form onSubmit={ handleSubmit } className='rt-password-form'>\n              <h1>Enter password</h1>\n              \n              <Input name={ 'password' }/>\n              \n              <button>submit</button>\n            </form>\n          );\n        } }\n      </Form>\n    );\n  }\n}","import React, { PureComponent } from 'react';\n\nimport { AUTHORIZATION_STATES } from '../../../store/reducers/appReducer';\n\nimport { PhoneForm } from '../phone-form/PhoneForm';\nimport { CodeForm } from '../code-form/CodeForm';\nimport { PasswordForm } from '../password-form/PasswordForm';\n\ninterface LoginFormProps {\n  state: string;\n  onSubmit: (message: any) => void;\n}\n\nexport class LoginForm extends PureComponent<LoginFormProps> {\n  render () {\n    return (\n      <div className='rt-login-form'>\n        { this.renderForm() }\n      </div>\n    );\n  }\n  \n  renderForm (): React.ReactNode {\n    const { state, onSubmit } = this.props;\n    \n    switch (state) {\n      case AUTHORIZATION_STATES.PHONE_NUMBER: {\n        return <PhoneForm onSubmit={ onSubmit }/>;\n      }\n      \n      case AUTHORIZATION_STATES.CODE: {\n        return <CodeForm onSubmit={ onSubmit }/>;\n      }\n      \n      case AUTHORIZATION_STATES.PASSWORD: {\n        return <PasswordForm onSubmit={ onSubmit }/>;\n      }\n      \n      default: {\n        return state;\n      }\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport { bindActionCreators } from 'redux';\nimport { FormattedMessage } from 'react-intl';\nimport { Helmet } from 'react-helmet';\n\nimport { connect } from '../../../store/connect';\nimport { RootState } from '../../../store/reducers/rootReducer';\nimport { AppState, AUTHORIZATION_STATES } from '../../../store/reducers/appReducer';\nimport { TelegramActions, sendMessage } from '../../../store/actions/telegramActions';\n\nimport { LoginForm } from '../../auth/login-form/LoginForm';\n\nimport './login.scss';\n\n@connect<AppState, TelegramActions>(mapStateToProps, mapDispatchToProps)\nclass LoginWrapper extends Component<AppState & TelegramActions> {\n  render () {\n    const { authState, sendMessage } = this.props;\n    \n    if (this.props.authState === AUTHORIZATION_STATES.AUTHORIZED) {\n      return <Redirect to={ '/' }/>;\n    }\n    \n    return (\n      <div className='rt-login'>\n        <FormattedMessage id={ 'common.pages.login.title' }\n                          defaultMessage={ 'Telegram | Sign in' }>\n          {\n            title => (\n              <Helmet>\n                <title>{ title }</title>\n              </Helmet>\n            )\n          }\n        </FormattedMessage>\n        \n        <LoginForm state={ authState }\n                   onSubmit={ sendMessage }/>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps (dispatch: any) {\n  return bindActionCreators({ sendMessage }, dispatch);\n}\n\nfunction mapStateToProps (state: RootState): AppState {\n  return state.app;\n}\n\nexport const Login: React.ComponentType = LoginWrapper as any;","import React, { PureComponent } from 'react';\n\nimport { LogoIcon } from '../../common/icons/LogoIcon';\n\nimport './app-loading.scss';\n\nexport class AppLoading extends PureComponent {\n  render () {\n    return (\n      <div className='rt-app-loading'>\n        <div className='rt-app-loading__body'>\n          <LogoIcon className='rt-app-loading__icon'/>\n\n          <div className='rt-app-loading__title'>\n            Telegram\n          </div>\n  \n          <div className='rt-app-loading__subtitle'>\n            a new era of messaging\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\n\nimport { RootState } from '../../store/reducers/rootReducer';\nimport { connect } from '../../store/connect';\n\nimport { AppLoading } from './app-loading/AppLoading';\n\nimport { AUTHORIZATION_STATES } from '../../store/reducers/appReducer';\n\nexport const PrivateRoute: React.ComponentType<RouteProps> = connect(mapStateToProps)((props: RouteProps & RootState) => {\n  const { component, app, ...restProps } = props;\n  \n  const Component: React.ComponentType<any> = component as any;\n  \n  return <Route { ...restProps }\n                render={ (props => {\n                  if (app.authState === AUTHORIZATION_STATES.LOADING) {\n                    return (<AppLoading/>);\n                  }\n    \n                  if (app.authState !== AUTHORIZATION_STATES.AUTHORIZED) {\n                    return <Redirect to={ '/login' }/>;\n                  }\n    \n                  return <Component { ...props }/>;\n                }) }/>;\n}) as any;\n\n\nfunction mapStateToProps (state: RootState) {\n  return {\n    app: state.app,\n  };\n}\n","import React from 'react';\nimport { Route, RouteProps } from 'react-router-dom';\n\nimport { RootState } from '../../store/reducers/rootReducer';\nimport { connect } from '../../store/connect';\n\nimport { AppLoading } from './app-loading/AppLoading';\n\n\nexport const AppRoute: React.ComponentType<RouteProps> = connect(mapStateToProps)((props: RouteProps & RootState) => {\n  const { component, app, ...restProps } = props;\n  \n  const Component: React.ComponentType<any> = component as any;\n  \n  return <Route { ...restProps }\n                render={ (props => {\n                  if (!app.ready) {\n                    return (<AppLoading/>);\n                  }\n                  \n    \n                  return <Component { ...props }/>;\n                }) }/>;\n}) as any;\n\n\nfunction mapStateToProps (state: RootState) {\n  return {\n    app: state.app,\n  };\n}\n","import React, { Component } from 'react';\nimport { Switch } from 'react-router';\n\nimport { Messenger } from './components/pages/messenger/Messenger';\nimport { Login } from './components/pages/login/Login';\n\nimport './assets/styles/main.scss';\n\nimport { PrivateRoute } from './components/pages/PrivateRoute';\nimport { AppRoute } from './components/pages/AppRoute';\n\nexport class App extends Component {\n  render (): React.ReactNode {\n    return (\n      <div className='rt-app'>\n        <Switch>\n          <AppRoute path={ '/login' } exact={ true } component={ Login }/>\n          \n          <PrivateRoute path='/' component={ Messenger }/>\n        </Switch>\n      </div>\n    );\n  }\n}\n","import { IntlProvider, addLocaleData } from 'react-intl';\nimport { connect } from 'react-redux';\nimport * as en from 'react-intl/locale-data/en';\n\naddLocaleData([...en]);\n\nexport const messages = {\n  en: require('../../../locales/en.json'),\n};\n\nexport const TextComponent = (props: any) => {\n  return props.children;\n};\n\nfunction mapStateToProps (): any {\n  const locale = 'en';\n\n  return {\n    locale,\n    messages: { ...messages.en, ...messages[locale] },\n  };\n}\n\nexport const ConnectedIntlProvider = connect(mapStateToProps)(IntlProvider);\n","import { IEnvironment } from './environment';\n\nconst apiId   = process.env.REACT_APP_TELEGRAM_API_ID;\nconst apiHash = process.env.REACT_APP_TELEGRAM_API_HASH;\n\nif (!apiId || !apiHash) {\n  throw new Error('api_id and api_hash are not defined');\n}\n\nexport const environmentDefault: IEnvironment = {\n  apiId,\n  apiHash,\n  isLoggerEnabled: true,\n  useTestDC: !process.env.REACT_APP_TELEGRAM_PRODUCTION_DC,\n};\n","import { IEnvironment } from './environment';\nimport { environmentDefault } from './environmentDefault';\n\nexport const environmentProduction: IEnvironment = {\n  ...environmentDefault,\n  isLoggerEnabled: false,\n};","import { environmentDefault } from './environmentDefault';\nimport { environmentProduction } from './environmentProduction';\n\nexport interface IEnvironment {\n  apiId: string;\n  apiHash: string;\n  isLoggerEnabled: boolean;\n  useTestDC: boolean;\n}\n\nexport let environment: IEnvironment = {\n  ...environmentDefault,\n};\n\nif (process.env.NODE_ENV === 'production') {\n  environment = {\n    ...environmentProduction,\n  };\n}\n","import { all, call } from 'redux-saga/effects';\n\nimport { telegramSaga } from './telegramSaga';\n\nexport function* rootSaga (): any {\n  return yield all([\n    call(telegramSaga)\n  ]);\n}\n","import { combineReducers } from 'redux';\n\nimport { appReducer, AppState } from './appReducer';\n\nexport interface RootState {\n  app: AppState;\n}\n\nexport const rootReducer = (state: any, action: any) => {\n  return combineReducers({\n    app: appReducer,\n  })(state, action);\n};\n","import React, { ComponentClass } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\n\nimport { App } from './App';\nimport { ConnectedIntlProvider, TextComponent } from './components/common/connected-intl-provider/ConnectedIntlProvider';\n\nimport { configureStore } from './store/configureStore';\nimport { AppHistory } from './config/appHistory';\n\nimport { enableTabMode } from './utils/enableTabMode';\n\nconst rootElement = document.getElementById('root');\nconst AppStore    = configureStore();\n\nconst render = (Component: ComponentClass) => {\n  ReactDOM.render((\n    <Provider store={ AppStore }>\n      <ConnectedIntlProvider textComponent={ TextComponent }>\n        <Router history={ AppHistory }>\n          <Component/>\n        </Router>\n      </ConnectedIntlProvider>\n    </Provider>\n  ), rootElement);\n};\n\nrender(App);\n\nif ((module as any).hot) {\n  (module as any).hot.accept();\n  \n  const NextApp = require('./App').App;\n  \n  render(NextApp);\n}\n\nenableTabMode();\n","import { applyMiddleware, createStore } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { environment } from '../config/environment';\n\nimport { rootSaga } from './sagas/rootSaga';\nimport { rootReducer } from './reducers/rootReducer';\n\n\nconst logger = createLogger({\n  predicate: () => environment.isLoggerEnabled,\n});\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const configureStore = (preloadedState = {}) => {\n  const store = createStore(\n    rootReducer,\n    preloadedState,\n    applyMiddleware(thunk, logger, sagaMiddleware)\n  );\n  \n  sagaMiddleware.run(rootSaga);\n  \n  return store;\n};\n","import { createBrowserHistory } from 'history';\n\nexport const AppHistory = createBrowserHistory();\n","export const enableTabMode = () => {\n  const TAB_MODE_CLASSNAME = 'rt-tab-mode';\n\n  document.addEventListener('keydown', (event: KeyboardEvent) => {\n    if (event.key === 'Tab') {\n      document.body.classList.add(TAB_MODE_CLASSNAME);\n    }\n\n    document.addEventListener('mousemove', onMouseMove);\n  });\n\n  function onMouseMove (): void {\n    document.body.classList.remove(TAB_MODE_CLASSNAME);\n\n    document.removeEventListener('mousemove', onMouseMove);\n  }\n};\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"telegram.worker.053fc8add543fa31f924.js\");\n};"],"sourceRoot":""}